gt_lab =[[ 2.8688e+01,  8.4878e+00, -1.7055e+00,  3.5688e-01,  3.2139e-01,
          8.8158e-01,  1.4450e+00],
        [ 9.5514e+01,  2.5925e+01, -1.7057e+00,  4.5199e+00,  1.9527e+00,
          1.7084e+00,  3.0961e+00],
        [ 6.6063e+01, -1.5512e+01, -1.5277e+00,  3.8138e-01,  3.5305e-01,
          8.8248e-01,  3.3609e-03],
        [ 6.9656e+01, -1.2058e+01, -1.8104e+00,  7.4379e-01,  6.5065e-01,
          1.7332e+00, -1.6269e+00],
        [ 1.5614e+02,  2.7897e+01, -2.4112e+00,  4.2920e+00,  1.9379e+00,
          1.5481e+00,  3.0571e+00],
        [ 6.3108e+01, -1.5525e+01, -1.5878e+00,  3.2260e-01,  3.2890e-01,
          8.8271e-01, -6.0223e-02],
        [ 7.1973e+01, -1.5413e+01, -2.0020e+00,  6.2320e-01,  5.0779e-01,
          1.7180e+00, -1.5735e+00],
        [ 1.1399e+02,  2.0335e+01, -1.8788e+00,  4.2001e+00,  1.7870e+00,
          1.5233e+00,  3.0734e+00],
        [ 8.9214e+01,  2.5627e+01, -2.1387e+00,  4.2687e+00,  1.8420e+00,
          1.5327e+00,  3.0714e+00],
        [ 1.7910e+01, -6.3023e+00, -1.7367e+00,  4.5619e+00,  1.7834e+00,
          1.7241e+00, -1.0024e-01],
        [ 8.1505e+01,  2.1415e+01, -2.1071e+00,  4.2512e+00,  1.8451e+00,
          1.5360e+00,  3.1182e+00],
        [ 1.2775e+02,  2.0729e+01, -1.7766e+00,  4.2776e+00,  1.8374e+00,
          1.4501e+00,  3.0896e+00],
        [ 1.0833e+02,  2.6713e+01, -2.0784e+00,  4.2592e+00,  1.8156e+00,
          1.5769e+00,  3.0557e+00],
        [ 1.1297e+02,  2.3877e+01, -1.9683e+00,  4.7889e+00,  1.8512e+00,
          1.6742e+00,  3.0548e+00],
        [ 1.1224e+02,  1.6368e+01, -1.7450e+00,  4.6174e+00,  1.8481e+00,
          1.5251e+00,  3.1164e+00],
        [ 6.0825e+01, -1.5789e+01, -1.4250e+00,  3.6405e-01,  3.0815e-01,
          8.3512e-01, -1.1415e-01],
        [ 9.0941e+01,  2.2191e+01, -1.8587e+00,  4.2544e+00,  1.8494e+00,
          1.5314e+00,  3.1031e+00],
        [ 8.0949e+01,  2.5203e+01, -1.9313e+00,  4.2943e+00,  1.8506e+00,
          1.5778e+00,  3.1022e+00],
        [ 8.0315e+01,  1.8188e+01, -1.7365e+00,  4.3259e+00,  1.9438e+00,
          1.5080e+00,  3.1095e+00],
        [ 7.2594e+01, -1.5083e+01, -2.0674e+00,  6.2818e-01,  5.6240e-01,
          1.6185e+00, -1.5463e+00],
        [ 7.0203e+01,  2.0535e+01, -1.8187e+00,  1.7086e+00,  4.8873e-01,
          1.4201e+00, -1.6133e+00],
        [ 7.1863e+01, -1.1016e+01, -2.0102e+00,  6.4261e-01,  6.0221e-01,
          1.6102e+00, -1.6991e+00],
        [ 6.8399e+01, -1.5319e+01, -1.9289e+00,  3.3650e-01,  3.6834e-01,
          8.9699e-01,  8.4399e-03],
        [ 6.0462e+01, -1.8917e+01, -1.5588e+00,  3.2013e-01,  3.4192e-01,
          8.4430e-01, -2.0921e-02],
        [ 6.5456e+01, -1.8443e+01, -1.6896e+00,  3.4051e-01,  3.2098e-01,
          8.4761e-01, -8.2412e-02],
        [ 7.0304e+01, -1.2065e+01, -1.7926e+00,  7.7975e-01,  6.1873e-01,
          1.6377e+00, -1.6226e+00],
        [ 7.9955e+01,  1.5303e+01, -1.8275e+00,  4.2410e+00,  1.8256e+00,
          1.5669e+00,  3.0982e+00],
        [ 7.6058e+01,  9.1934e+00, -1.6309e+00,  3.3049e-01,  3.2609e-01,
          8.1725e-01,  1.5304e+00],
        [ 1.2667e+02,  3.5062e+01, -2.0958e+00,  4.1677e+00,  1.7880e+00,
          1.4556e+00,  3.0712e+00]]


import torch
import numpy as np
import vis_utils as tool
import cv2
img_path = "./data/DAIR-V2X/cooperative-vehicle-infrastructure/infrastructure-side/training/image_2/012652.jpg"
gt = torch.tensor(gt_lab)
img_gt = tool.get_rgb(img_path)

num_rects = 0
cam_points_3d = []
for i in range(gt.shape[0]):
    num_rects += 1
    box = gt[i]
    h = np.float(box[5])
    w = np.float(box[4])
    L = np.float(box[3])
    x = np.float(box[0])
    y = np.float(box[1])
    z = np.float(box[2])
    z = z - h / 2
    dimensions_3d = np.array([L, w, h])
    location_3d = np.array([x, y, z])
    rotation = np.array(box[6])
    corner = tool.compute_box_3d(dimensions_3d, location_3d, rotation)  # 点云坐标系下3D框8个顶点的3D坐标
    # print(corner)
            #    lidar2ego[:3, :3] = rot0
            # lidar2ego[:3, 3] = trans0
    r_velo2cam = lidar2camera[0][:3, :3]
    t_velo2cam = lidar2camera[0][:3, 3]  
    calib_intrinsic = camera_intrinsics[0]
    camera_8_points = np.array((r_velo2cam * np.matrix(corner).T + t_velo2cam).T)  # 相机坐标系下3D框8个顶点的3D坐标
    cam_points_3d.append(camera_8_points)

cam_points_3d = np.stack(cam_points_3d)
points_2d = np.array(tool.points_cam2img(cam_points_3d, calib_intrinsic))
# print(num_rects)
# print(points_2d.shape)

img_gt = tool.plot_rect3d_on_img(img_gt, num_rects, points_2d)

cv2.imwrite('/workspace/mnt/storage/guangcongzheng/zju_zgc/DAIR-V2X/tools/visualize_ours/veh_gt1.jpg', img_gt)
